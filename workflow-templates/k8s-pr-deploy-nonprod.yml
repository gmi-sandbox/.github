# description: Deploys an application to a named github environment. when a PR is opened or updated for a branch.
name: Deploy Nonprod
on:
  pull_request:

jobs:
  # Example application tests
  #tests:
  #  runs-on: gcp
  #  steps:
  #    - run: mytestcommand --mytestarg 1
  #      shell: bash
  
  # Converts the repository name into a kebab case safe name that can be used in DNS names and container names.
  repo-name:
    runs-on: gcp
    outputs:
      safeRepoName: ${{steps.kebabcase.outputs.kebabRepository}}
    steps:
      - id: kebabcase
        uses: gmi-actions/kebabcase@v1

  # Builds your container image
  build-container:
    needs:
    - repo-name
    # - tests
    uses: gmi-actions/build-container/.github/workflows/build-container.yml@v1
    with:
      container_name: ${{ needs.repo-name.outputs.safeRepoName }}
    secrets: inherit
  
  # Deploys your application to k8s-applications repository
  dev-deploy:
    # Ignore dependabot PR's note only works from on: pull_request events. Switch to github.ref_name for pushes.
    if: (!startsWith(github.head_ref, 'dependabot'))
    environment: dev # CHANGE ME TO YOUR DESIRED ENVIRONMENT NAME!!!
    needs: 
    - build-container
    - repo-name
    runs-on: gcp
    outputs:
      clusterMatrix: ${{steps.deploy.outputs.clusterMatrix}}
    steps:
    - uses: actions/checkout@v4 # Checkout is required to pull the correct catalog-info-yaml
    - name: deploy
      id: deploy
      uses: gmi-actions/deployK8sApplication@v1 
      with:
        kubeconfig: ${{secrets.K8S_DEPLOY_KUBECONFIG}}
        app_env: dev # Kube Namespace ENV Optional, More than likely this will match your Deploy Environment.
        cluster_env: nonprod
        # These are your HELM values file overrides. The below contains defaults most projects will use. The below contains defaults most projects will use. Do not forget to set your env_name Var in your environment
        values: | 
          image: 
            repository: ${{needs.build-container.outputs.container_registry}}/${{needs.build-container.outputs.container_name}}
            tag: ${{needs.build-container.outputs.container_tag}}
          istio:
            # Don't forget to setup your environment with Variables. This example uses a github Environment specific Variable.
            hosts:
              - ${{ needs.repo-name.outputs.safeRepoName }}-${{vars.env_name}}.k8s.genmills.com

  # Deploys your application to the cluster(S) by asking argocd in the cluster to syncronize with your git repository
  dev-sync:
    # Ignore dependabot PR's note only works from on: pull_request events. Switch to github.ref_name for pushes.
    if: (!startsWith(github.head_ref, 'dependabot'))
    uses: gmi-actions/deployK8sApplication/.github/workflows/sync.yml@v1
    needs: dev-deploy
    with:
      matrix: ${{ needs.dev-deploy.outputs.clusterMatrix }}
      environment: dev # CHANGE ME TO YOUR DESIRED ENVIRONMENT NAME!!!
    secrets: inherit

  # Example QA deployment
  # # Deploys your application to k8s-applications repository
  # qa-deploy:
  #   # Ignore dependabot PR's note only works from on: pull_request events. Switch to github.ref_name for pushes.
  #   if: (!startsWith(github.head_ref, 'dependabot'))
  #   environment: qa # CHANGE ME TO YOUR DESIRED ENVIRONMENT NAME!!!
  #   # controls what jobs this job needs to wait form commenting out dev-sync would result in dev and qa deploying in parallel
  #   needs: 
  #     - build-container
  #     - dev-sync
  #   runs-on: gcp
  #   outputs:
  #     clusterMatrix: ${{steps.deploy.outputs.clusterMatrix}}
  #   steps:
  #   - name: deploy
  #     id: deploy
  #     uses: gmi-actions/deployK8sApplication@v1 
  #     with:
  #       kubeconfig: ${{secrets.K8S_DEPLOY_KUBECONFIG}}
  #       app_env: qa # Kube Namespace ENV Optional, More than likely this will match your Deploy Environment.
  #       cluster_env: nonprod
  #       # These are your HELM values file overrides. The below contains defaults most projects will use. Do not forget to set your env_name Var in your environment
  #       values: | 
  #         image: 
  #           repository: ${{needs.build-container.outputs.container_registry}}/${{needs.build-container.outputs.container_name}}
  #           tag: ${{needs.build-container.outputs.container_tag}}
  #         istio:
  #           # Don't forget to setup your environment with Variables. This example uses a github Environment specific Variable.
  #           hosts:
  #             - ${{ github.event.repository.name }}-${{vars.env_name}}.k8s.genmills.com

  # # Deploys your application to the cluster(S) by asking argocd in the cluster to syncronize with your git repository
  # sync:
  #   # Ignore dependabot PR's note only works from on: pull_request events. Switch to github.ref_name for pushes.
  #   if: (!startsWith(github.head_ref, 'dependabot'))
  #   uses: gmi-actions/deployK8sApplication/.github/workflows/sync.yml@v1
  #   needs: qa-deploy
  #   with:
  #     matrix: ${{ needs.qa-deploy.outputs.clusterMatrix }}
  #     environment: dev # CHANGE ME TO YOUR DESIRED ENVIRONMENT NAME!!!
  #   secrets: inherit
