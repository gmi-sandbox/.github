name: 'deploy-docker-image-from-feature-branch-to-prod'
on:
  pull_request:
    types:
      - closed

## Deploy the image generated by 'deploy-docker-image-from-feature-branch-to-nonprod' to the prod k8s.
jobs:

  # Only run if the PR was merged to the default branch or triggered manually
  if_merged:
      if: github.event.pull_request.merged == true && github.ref_name == $default-branch
      runs-on: gcp
      steps:
      - run: |
          echo The PR was merged

  # Get the environment variables required for promotion
  set_env:
      needs: if_merged
      permissions: read-all
      uses: gmi-actions/feature-branch-promotion-setup-env/.github/workflows/get-github-context.yaml@v1

  # Get the build info required for promotion from Artifactory
  get_k8s_build_info:
    needs: set_env
    uses: gmi-actions/get-artifact-build-info/.github/workflows/get-k8s-build-info.yaml@v1
    with:
      build_name: ${{ needs.set_env.outputs.safe_repo_name }} 
      build_number: ${{ needs.set_env.outputs.build_number }}

  # Promote the image from docker-snapshot-local to docker-local
  promote_image:
      runs-on: gcp
      needs: get_k8s_build_info
      steps:
          - uses: actions/checkout@v4
          - name: Setup JFrog CLI for promotion (only for Production)
            uses: jfrog/setup-jfrog-cli@v4
            env:
              JF_ENV_1: ${{ secrets.ARTIFACTORY_PROD }}
          - uses: gmi-actions/promote-artifact@v1
            with:
              package_name: ${{ needs.set_env.outputs.safe_repo_name }}
              build_number: ${{ needs.get_k8s_build_info.outputs.build_number }}
              repository_name: docker-snapshot-local
              target_repository: docker-local
              repository_path: ''
              container_tag: ${{ needs.get_k8s_build_info.outputs.container_tag }}

  # Deploys your application to k8s-applications repository
  deploy:
    environment: prod # CHANGE ME TO YOUR DESIRED ENV NAME!!!
    needs:
      - get_k8s_build_info
      - promote_image
    runs-on: gcp
    outputs:
      clusterMatrix: ${{steps.deploy.outputs.clusterMatrix}}
    steps:
      - uses: actions/checkout@v4 # Checkout is required to pull the correct catalog-info-yaml
      - name: deploy
        id: deploy
        uses: gmi-actions/deployK8sApplication@v1 
        with:
        kubeconfig: ${{secrets.K8S_DEPLOY_KUBECONFIG}}
        cluster_env: prod
        app_env: prod
        # These are your HELM values file overrides. The below contains defaults most projects will use.
        values: | 
          image: 
              repository: ${{ needs.get_k8s_build_info.outputs.container_registry }}/${{ needs.get_k8s_build_info.outputs.container_name }}
              tag: ${{ needs.get_k8s_build_info.outputs.container_tag }}
              istio:
                  # Don't forget to setup your environment with Variables. This example uses a github Environment specific Variable.
                  hosts:
                    - ${{ needs.set_env.outputs.safe_repo_name }}.k8s.genmills.com

  # Deploys your application to the cluster(S). Utilizes argocd to sync the helm chart in your repository to the cluster with the above overrides.
  sync:
    uses: gmi-actions/deployK8sApplication/.github/workflows/sync.yml@v1
    needs: deploy
    with:
      matrix: ${{ needs.deploy.outputs.clusterMatrix }}
      environment: prod # CHANGE ME TO YOUR DESIRED ENV NAME!!!
    secrets: inherit
